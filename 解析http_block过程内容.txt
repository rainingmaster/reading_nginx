p *((ngx_http_core_main_conf_t *)((*(ngx_http_conf_ctx_t **)(&(((void **) cycle->conf_ctx)[ngx_http_module->index])))->main_conf[0]))


(gdb) p *((ngx_http_core_main_conf_t *)((*(ngx_http_conf_ctx_t **)(&(((void **) cycle->conf_ctx)[ngx_http_module->index])))->main_conf[0]))
$37 = {
  servers = {
    elts = 0x7ca5f8, //值为 ngx_http_core_srv_conf_t 数组的首地址
    nelts = 1, 
    size = 8, 
    nalloc = 4, 
    pool = 0x7c8860
  }, 
  phase_engine = {
    handlers = 0x7fa148, 
    server_rewrite_index = 0, 
    location_rewrite_index = 3
  }, 
  headers_in_hash = {
    buckets = 0x7f8490, 
    size = 32
  }, 
  variables_hash = {
    buckets = 0x7f9630, 
    size = 353
  }, 
  variables = {
    elts = 0x7f8c10, 
    nelts = 9, 
    size = 56, 
    nalloc = 16, 
    pool = 0x7c8860
  }, 
  ncaptures = 0, 
  server_names_hash_max_size = 512, 
  server_names_hash_bucket_size = 64, 
  variables_hash_max_size = 1024, 
  variables_hash_bucket_size = 64, 
  variables_keys = 0x0, 
  ports = 0x7cd318, 
  try_files = 0, 
  phases = {{
      handlers = {
        elts = 0x7f8438, 
        nelts = 0, 
        size = 8, 
        nalloc = 1, 
        pool = 0x7c8860
      }
    }, {
      handlers = {
        elts = 0x7f8fb0, 
        nelts = 2, 
        size = 8, 
        nalloc = 2, 
        pool = 0x7c8860
      }
    }, {
      handlers = {
        elts = 0x0, 
        nelts = 0, 
        size = 0, 
        nalloc = 0, 
        pool = 0x0
      }
    }, {
      handlers = {
        elts = 0x7f95f8, 
        nelts = 3, 
        size = 8, 
        nalloc = 4, 
        pool = 0x7c8860
      }
    }, {
      handlers = {
        elts = 0x0, 
        nelts = 0, 
        size = 0, 
        nalloc = 0, 
        pool = 0x0
      }
    }, {
      handlers = {
        elts = 0x7f8fa0, 
        nelts = 2, 
        size = 8, 
        nalloc = 2, 
        pool = 0x7c8860
      }
    }, {
      handlers = {
        elts = 0x7f8458, 
        nelts = 2, 
        size = 8, 
        nalloc = 2, 
        pool = 0x7c8860
      }
    }, {
      handlers = {
        elts = 0x0, 
        nelts = 0, 
        size = 0, 
        nalloc = 0, 
        pool = 0x0
      }
    }, {
      handlers = {
        elts = 0x0, 
        nelts = 0, 
        size = 0, 
        nalloc = 0, 
        pool = 0x0
      }
    }, {
      handlers = {
        elts = 0x7f8468, 
        nelts = 3, 
        size = 8, 
        nalloc = 4, 
        pool = 0x7c8860
      }
    }, {
      handlers = {
        elts = 0x7f8488, 
        nelts = 1, 
        size = 8, 
        nalloc = 1, 
        pool = 0x7c8860
      }
    }}
}


(gdb) p *0x7ca5f8
$75 = 8292152 (0x7e8738)
(gdb) p *(ngx_http_core_srv_conf_t *) 0x7e8738
$76 = {
  server_names = {
    elts = 0x7cd298, 
    nelts = 1, 
    size = 32, 
    nalloc = 4, 
    pool = 0x7cc870
  }, 
  ctx = 0x7e8380, 
  server_name = {
    len = 0, 
    data = 0x0
  }, 
  connection_pool_size = 18446744073709551615, 
  request_pool_size = 18446744073709551615, 
  client_header_buffer_size = 18446744073709551615, 
  large_client_header_buffers = {
    num = 0, 
    size = 0
  }, 
  client_header_timeout = 18446744073709551615, 
  ignore_invalid_headers = -1, 
  merge_slashes = -1, 
  underscores_in_headers = -1, 
  listen = 1, 
---Type <return> to continue, or q <return> to quit---
  captures = 0, 
  named_locations = 0x0
}

(gdb) p *((ngx_http_core_loc_conf_t*)((ngx_http_conf_ctx_t*)0x7e8380)->loc_conf[0])
$88 = {
  name = {
    len = 0, 
    data = 0x0
  }, 
  regex = 0x0, 
  noname = 0, 
  lmt_excpt = 0, 
  named = 0, 
  exact_match = 0, 
  noregex = 0, 
  auto_redirect = 0, 
  gzip_disable_msie6 = 0, 
  static_locations = 0x7f83a0, 
  regex_locations = 0x0, 
  loc_conf = 0x0, 
  limit_except = 0, 
  limit_except_loc_conf = 0x0, 
  handler = 0, 
  alias = 0, 
  root = {
    len = 48, 
    data = 0x7f2c52 "/usr/local/src/ngx_openresty-1.7.10.2/nginx/html"
  }, 
  post_action = {
    len = 0, 
    data = 0x0
  }, 
  root_lengths = 0x0, 
  root_values = 0x0, 
  types = 0x7dcd90, 
  types_hash = {
    buckets = 0x7f2c88, 
    size = 98
  }, 
  default_type = {
    len = 24, 
    data = 0x7de4ae "application/octet-stream"
  }, 
  client_max_body_size = 1048576, 
  directio = 9223372036854775807, 
  directio_alignment = 512, 
  client_body_buffer_size = 8192, 
  send_lowat = 0, 
  postpone_output = 1460, 
  limit_rate = 0, 
  limit_rate_after = 0, 
  sendfile_max_chunk = 0, 
  read_ahead = 0, 
  client_body_timeout = 60000, 
  send_timeout = 60000, 
  keepalive_timeout = 65000, 
  lingering_time = 30000, 
  lingering_timeout = 5000, 
  resolver_timeout = 30000, 
  resolver = 0x7f36f0, 
  keepalive_header = 0, 
  keepalive_requests = 100, 
  keepalive_disable = 5, 
  satisfy = 0, 
  lingering_close = 1, 
  if_modified_since = 1, 
  max_ranges = 2147483647, 
  client_body_in_file_only = 0, 
  client_body_in_single_buffer = 0, 
  internal = 0, 
  sendfile = 1, 
  tcp_nopush = 0, 
  tcp_nodelay = 1, 
  reset_timedout_connection = 0, 
  server_name_in_redirect = 0, 
  port_in_redirect = 1, 
  msie_padding = 1, 
  msie_refresh = 0, 
  log_not_found = 1, 
  log_subrequest = 0, 
  recursive_error_pages = 0, 
  server_tokens = 1, 
  chunked_transfer_encoding = 1, 
  etag = 1, 
  gzip_vary = 0, 
  gzip_http_version = 1001, 
  gzip_proxied = 3, 
  gzip_disable = 0x0, 
  disable_symlinks = 0, 
  disable_symlinks_from = 0x0, 
  error_pages = 0x7f0aa0, 
  try_files = 0x0, 
  client_body_temp_path = 0x7f2fc0, 
  open_file_cache = 0x0, 
  open_file_cache_valid = 60, 
  open_file_cache_min_uses = 1, 
  open_file_cache_errors = 0, 
  open_file_cache_events = 0, 
  error_log = 0x7de5f0, 
  types_hash_max_size = 1024, 
  types_hash_bucket_size = 64, 
  locations = 0x7cd990 //存储 locatcion queue
}


